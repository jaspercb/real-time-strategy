#pragma once

#include <deque>
#include <map>
#include <vector>
#include <string>
#include <set>
#include <iostream>
#include <cmath>

#include "spike.hpp"

//forward declarations of everything


int main(){
	WeaponTemplate* testwpn = new WeaponTemplate("testWeapon", DMG_KINETIC, 50, 3, 40, 30, 0, GROUND_ONLY);
	std::vector<WeaponTemplate*> v;
	v.push_back(testwpn);
	v.push_back(testwpn);
	v.push_back(testwpn);
	Game* testgame = new Game();
	Team* testteam = new Team(testgame);
	UnitTemplate* testunittemplate = new UnitTemplate("testUnit", 100, 20, 20, GROUND_ONLY, v);
	Unit* testunit = new Unit(testteam, testunittemplate);
	//std::cout<<testunit->weaponTemplates().size()<<std::endl;
	delete testunit;
	delete testunittemplate;
	delete testwpn;
	delete testteam;
	delete testgame;
	return 0;
}
